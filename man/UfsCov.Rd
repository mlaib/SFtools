% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UfsCov.R
\name{UfsCov}
\alias{UfsCov}
\title{UfsCov algorithm for unsupervised feature selection}
\usage{
UfsCov(data)
}
\arguments{
\item{data}{Data of class: \code{matrix} or \code{data.frame}.}
}
\value{
A list of two elements:
 \itemize{
  \item \code{CM} a vector containing the coverage measure of
  each step of the SFS.
  \item \code{Id} a vector containing the added variables during
  the selection procedure.
  }
}
\description{
Applies the UfsCov algorithm based on the space filling concept,
by using a sequatial forward search (SFS).
}
\details{
Since the algorithm is based on pairwise distances, and
according to the computing power of your machine, large number of
data points can take much time and needs more memory.
See \code{\link{UfsCov_par}} for parellel computing, or
\code{\link{UfsCov_ff}} for memory efficient storage of large data
on disk and fast access (by using the \code{ffbase} packages).
}
\note{
The algorithm does not deal with missing values and constant
features. Please make sure to remove them.
}
\examples{
infinity<-Infinity(n=800)
Results<- UfsCov(infinity)

cou<-colnames(infinity)
nom<-cou[Results[[2]]]
par(mfrow=c(1,1), mar=c(5,5,2,2))
names(Results[[1]])<-cou[Results[[2]]]
plot(Results[[1]] ,pch=16,cex=1,col="blue", axes = FALSE,
xlab = "Added Features", ylab = "Coverage measure")
lines(Results[[1]] ,cex=2,col="blue")
grid(lwd=1.5,col="gray" )
axis(2)
axis(1,1:length(nom),nom)
which.min(Results[[1]])

\dontrun{

#### UfsCov on the Butterfly dataset ####
require(IDmining)

N <- 1000
raw_dat <- Butterfly(N)
dat<-raw_dat[,-9]

Results<- UfsCov(dat)
cou<-colnames(dat)
nom<-cou[Results[[2]]]
par(mfrow=c(1,1), mar=c(5,5,2,2))
names(Results[[1]])<-cou[Results[[2]]]

plot(Results[[1]] ,pch=16,cex=1,col="blue", axes = FALSE,
xlab = "Added Features", ylab = "Coverage measure")
lines(Results[[1]] ,cex=2,col="blue")
grid(lwd=1.5,col="gray" )
axis(2)
axis(1,1:length(nom),nom)
which.min(Results[[1]])

}
}
\references{
M. Laib and M. Kanevski (2017). Unsupervised Feature Selection Based on Space
Filling Concept, \href{https://arxiv.org/abs/1706.08894}{arXiv:1706.08894}.
}
\author{
Mohamed Laib \email{Mohamed.Laib@unil.ch}
}
